/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    interaction1Counter(0),
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    background.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(56, 56, 56));

    TITLE.setXY(85, 24);
    TITLE.setVisible(false);
    TITLE.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 216));
    TITLE.setLinespacing(0);
    TITLE.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    circleProgress.setXY(308, 172);
    circleProgress.setProgressIndicatorPosition(0, 0, 184, 184);
    circleProgress.setRange(0, 100);
    circleProgress.setCenter(92, 92);
    circleProgress.setRadius(82);
    circleProgress.setLineWidth(16);
    circleProgress.setStartEndAngle(0, 360);
    circleProgress.setCapPrecision(180);
    circleProgress.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    circleProgressPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 138, 255));
    circleProgress.setPainter(circleProgressPainter);
    circleProgress.setValue(61);
    circleProgress.setVisible(false);

    toggleButton1.setXY(336, 381);
    toggleButton1.setVisible(false);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.forceState(true);
    toggleButton1.setAction(buttonCallback);

    add(__background);
    add(background);
    add(TITLE);
    add(circleProgress);
    add(toggleButton1);
}

void Screen2ViewBase::setupScreen()
{

}

//Handles delays
void Screen2ViewBase::handleTickEvent()
{
    if(interaction1Counter > 0)
    {
        interaction1Counter--;
        if(interaction1Counter == 0)
        {
            //Interaction2
            //When Interaction1 completed show TITLE
            //Show TITLE
            TITLE.setVisible(true);
            TITLE.invalidate();

            //Interaction3
            //When Interaction1 completed show circleProgress
            //Show circleProgress
            circleProgress.setVisible(true);
            circleProgress.invalidate();

            //Interaction5
            //When Interaction1 completed show toggleButton1
            //Show toggleButton1
            toggleButton1.setVisible(true);
            toggleButton1.invalidate();
        }
    }
}

//Called when the screen is done with transition/load
void Screen2ViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered delay
    //Delay for 1000 ms (60 Ticks)
    interaction1Counter = INTERACTION1_DURATION;
}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction4
        //When toggleButton1 clicked call virtual function
        //Call buttonClicked
        buttonClicked();
    }
}
